{"version":3,"file":"static/js/42.1c28f9e0.chunk.js","mappings":"qMAsBA,MApBA,YAA6C,IAA7BA,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACjC,OACE,iBAAKC,UAAW,CAAC,QAAD,OAAkB,IAARD,GAAmB,IAARA,GAAmB,KAARA,GAAoB,KAARA,EAAY,YAAc,KAAtF,WACE,iBAAKC,UAAU,YAAf,WACE,iBAAKA,UAAU,cAAf,WACE,4BACE,eAAGC,MAAO,CAAEC,YAAa,QAAzB,WACE,6BAAKN,EAAKO,MAAM,EAAG,GAAnB,OAA4B,OACzB,OACA,KACP,4BACE,eAAGF,MAAO,CAAEG,aAAc,QAA1B,cAAsCP,EAAtC,OAAkD,OAC7C,OACF,KACP,eAAGG,UAAU,YAAb,cAA2BF,EAAKK,MAAM,EAAG,IAAzC,OAAmD,OAC9C,Q,mBCdPE,EAAa,mCAAG,2GAAMC,EAAN,+BAAoB,EAApB,SACKC,IAAAA,IAAA,8DAAiED,EAAjE,eADL,cACZE,EADY,OAGZC,EAAaC,SAASF,EAASG,QAAQ,kBAAoB,GAH/C,kBAIX,CACHC,KAAMJ,EAASI,KACfH,WAAAA,IANc,2CAAH,qDAUnB,I,6BCPMI,EAAO,CACXC,QAAS,OACTC,eAAgB,SAChBC,SAAU,QAENC,EAAS,CACbH,QAAS,OACTC,eAAgB,gBAChBG,WAAY,SACZC,OAAO,uBAgET,MA7DA,WACE,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KACA,GADA,MACmCH,EAAAA,EAAAA,UAAS,IAA5C,eAAOX,EAAP,KAAmBe,EAAnB,KAHiB,SAIFC,EAJE,0EAIjB,WAAyBnB,GAAzB,uFAEyBD,EAAcC,GAFvC,OAEQE,EAFR,OAGEkB,QAAQC,IAAI,WAAYnB,GACxBgB,EAAahB,EAASC,YAEtBa,EAAYd,EAASI,MANvB,4CAJiB,uBAajBgB,EAAAA,EAAAA,YAAU,WACRH,EAAU,KACT,IACH,IAAMI,EAAOR,EAASS,KAAI,SAACC,EAAKhC,GAC9B,OACE,SAAC,EAAD,CAEEA,MAAOA,EACPH,KAAMmC,EAAKnC,KACXC,MAAOkC,EAAKlC,MACZC,KAAMiC,EAAKjC,MAJNiC,EAAKC,OAYhB,OACE,iBAAK/B,MAAO,CAACgC,SAAS,UAAtB,WACE,iBAAKhC,MAAOgB,EAAZ,WACE,sCACA,mBACEjB,UAAU,gBACVkC,QAAS,kBAAMR,QAAQC,IAAI,eAF7B,gCAOF,gBAAK1B,MAAOY,EAAZ,SAAmBU,EAAU,aAAeM,KAC5C,SAAC,IAAD,CACEM,WAAW,MACXC,UAAU,IACVC,cAAc,WACdC,aAnBkB,SAACC,GACvBd,EAAUc,EAAEC,WAmBRC,mBAAoB,EACpBC,UAAWjC,EACXkC,cAAc,IACdC,kBAAkB,WAClBC,sBAAuB,KACvB7C,UAAU,aACV8C,cAAc,OACdC,kBAAkB","sources":["components/comments/commentCard/CommentCard.js","api/commentsApi.js","components/comments/Comment.js"],"sourcesContent":["import \"./CommentCard.css\";\n\nfunction Card({ name, email, body, index }) {\n  return (\n    <div className={[`card ${(index===4||index===5||index===10||index===11)?\"long-card\" : \"\"}`]} >\n      <div className=\"container\">\n        <div className=\"card-header\">\n          <div>\n            <p style={{ paddingLeft: \"20px\" }}>\n              <b> {name.slice(0, 5)} </b>{\" \"}\n            </p>{\" \"}\n          </div>{\" \"}\n          <div>\n            <p style={{ paddingRight: \"20px\" }}> {email} </p>{\" \"}\n          </div>{\" \"}\n        </div>{\" \"}\n        <p className=\"card-body\"> {body.slice(0, 85)} </p>{\" \"}\n      </div>{\" \"}\n    </div>\n  );\n}\n\nexport default Card;\n","/* eslint-disable */\nimport axios from \"axios\";\n\nconst fetchComments = async(page_number = 1) => {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/comments?_page=${page_number}&_limit=12`);\n    // eslint-disable-line // \n    const totalPages = parseInt(response.headers[\"x-total-count\"]) / 12;\n    return {\n        data: response.data,\n        totalPages\n    }\n\n};\nexport default fetchComments;","import Card from \"./commentCard/CommentCard\";\nimport fetchComments from \"../../api/commentsApi\";\nimport { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport \"./Comments.css\";\n\nconst main = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexWrap: \"wrap\",\n};\nconst header = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  margin:\"19px 13px 12px 25px\"\n};\n\nfunction Comment() {\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalPages, seTotalPages] = useState(1);\n  async function fetchData(page_number) {\n    //setLoading(true);\n    const response = await fetchComments(page_number);\n    console.log(\"response\", response);\n    seTotalPages(response.totalPages);\n    // setLoading(false);\n    setComments(response.data);\n  }\n\n  useEffect(() => {\n    fetchData(1);\n  }, []);\n  const List = comments.map((item,index) => {\n    return (\n      <Card\n        key={item.id}\n        index={index}\n        name={item.name}\n        email={item.email}\n        body={item.body}\n      />\n    );\n  });\n\n  const handlePageClick = (e) => {\n    fetchData(e.selected);\n  };\n  return (\n    <div style={{maxWidth:\"1000px\"}}>\n      <div style={header}>\n        <h3>Comments</h3>\n        <button\n          className=\"create-button\"\n          onClick={() => console.log(\"working...\")}\n        >\n          Create comment\n        </button>\n      </div>\n      <div style={main}>{loading ? \"loading...\" : List}</div>\n      <ReactPaginate\n        breakLabel=\"...\"\n        nextLabel=\">\"\n        nextClassName=\"next-nav\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={1}\n        pageCount={totalPages}\n        previousLabel=\"<\"\n        previousClassName=\"prev-nav\"\n        renderOnZeroPageCount={null}\n        className=\"pagination\"\n        pageClassName=\"list\"\n        pageLinkClassName=\"link\"\n      />\n    </div>\n  );\n}\n\nexport default Comment;\n"],"names":["name","email","body","index","className","style","paddingLeft","slice","paddingRight","fetchComments","page_number","axios","response","totalPages","parseInt","headers","data","main","display","justifyContent","flexWrap","header","alignItems","margin","useState","comments","setComments","loading","seTotalPages","fetchData","console","log","useEffect","List","map","item","id","maxWidth","onClick","breakLabel","nextLabel","nextClassName","onPageChange","e","selected","pageRangeDisplayed","pageCount","previousLabel","previousClassName","renderOnZeroPageCount","pageClassName","pageLinkClassName"],"sourceRoot":""}