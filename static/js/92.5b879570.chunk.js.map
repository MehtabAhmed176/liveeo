{"version":3,"file":"static/js/92.5b879570.chunk.js","mappings":"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","sources":["components/comments/DeleteComment.js","components/comments/UpdateComment.js","components/comments/commentCard/CommentCard.js","api/commentsApi.js","api/deleteCommentApi.js","api/createComment.js","components/comments/commentCard/CreateCard.js","components/comments/Comment.js"],"sourcesContent":["import { AiFillDelete } from \"react-icons/ai\";\nfunction Delete({ handleDelete }) {\n  return (\n    <div>\n      {\" \"}\n      <AiFillDelete\n        onClick={handleDelete}\n        style={{ fontSize: \"17px\", color: \"#84829e\" }}\n      />\n    </div>\n  );\n}\n\nexport default Delete;\n","import { AiTwotoneEdit } from \"react-icons/ai\";\nfunction Edit({ handleUpdate }) {\n  return (\n    <div>\n      {\" \"}\n      <AiTwotoneEdit\n        onClick={handleUpdate}\n        style={{ fontSize: \"17px\", color: \"#8698a1\" }}\n      />\n    </div>\n  );\n}\n\nexport default Edit;\n","import \"./CommentCard.css\";\nimport DeleteMe from \"../DeleteComment\";\nimport Edit from \"../UpdateComment\";\nfunction Card({ name, email, body, index, handleDelete, handleUpdate }) {\n  return (\n    <div\n      className={[\n        `card ${\n          index === 4 || index === 5 || index === 10 || index === 11\n            ? \"long-card\"\n            : \"\"\n        }`,\n      ]}>\n      <div className=\"container\">\n        <div className=\"card-header\">\n          <div>\n            <p style={{ paddingLeft: \"20px\" }}>\n              <b> {name.slice(0, 5)} </b>{\" \"}\n            </p>{\" \"}\n          </div>{\" \"}\n          <div>\n            <p style={{ paddingRight: \"20px\" }}> {email} </p>{\" \"}\n          </div>{\" \"}\n        </div>{\" \"}\n        <p className=\"card-body\"> {body.slice(0, 85)} </p>{\" \"}\n        <div className=\"delete-btn\">\n          <div style={{ marginRight: \"5px\" }}>\n            <Edit handleUpdate={handleUpdate} />\n          </div>\n          <DeleteMe handleDelete={handleDelete} />\n        </div>\n      </div>{\" \"}\n    </div>\n  );\n}\n\nexport default Card;\n","/* eslint-disable */\nimport axios from \"axios\";\n\nconst fetchComments = async (page_number = 1) => {\n  const response = await axios.get(\n    `https://jsonplaceholder.typicode.com/comments?_page=${page_number}&_limit=12`\n  );\n  // eslint-disable-line //\n  const totalPages = parseInt(response.headers[\"x-total-count\"]) / 12;\n  return {\n    data: response.data,\n    totalPages,\n  };\n};\nexport default fetchComments;\n","import axios from \"axios\";\n\nconst deleteCommentById = async (id) => {\n  const response = await axios.delete(\n    `https://jsonplaceholder.typicode.com/comments/${id}`\n  );\n  return response;\n};\nexport default deleteCommentById;\n","import axios from \"axios\";\n\nconst addNewComment = async (body) => {\n  const response = await axios.post(\n    \"https://jsonplaceholder.typicode.com/comments/\",\n    body\n  );\n  return response;\n};\nexport default addNewComment;\n","import \"./CommentCard.css\";\nfunction CreateComment({\n  isShow,\n  isEdit,\n  handleClose,\n  value,\n  handleChange,\n  handleSave,\n}) {\n  return (\n    <div\n      id=\"myModal\"\n      className=\"modal\"\n      style={{ display: `${isShow ? \"block\" : \"none\"}` }}>\n      <div className=\"modal-content\">\n        <span className=\"close\" onClick={handleClose}>\n          &times;\n        </span>\n        <p>Add new Comments..</p>\n        <div>\n          <form>\n            <div>\n              <input\n                type=\"text\"\n                value={value.body}\n                onChange={handleChange}\n                placeholder=\"type your comments...\"\n                className=\"form-input-create\"\n              />\n            </div>\n            <div>\n              <button className=\"save-btn\" onClick={handleSave}>\n                {isEdit ? \"Update\" : \"Save\"}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateComment;\n","import Card from \"./commentCard/CommentCard\";\nimport fetchComments from \"../../api/commentsApi\";\nimport deleteCommentById from \"../../api/deleteCommentApi\";\nimport addComment from \"../../api/createComment\";\nimport { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport CreateComment from \"./commentCard/CreateCard\";\nimport \"./Comments.css\";\n\nconst main = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexWrap: \"wrap\",\n};\nconst header = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  margin: \"19px 13px 12px 25px\",\n};\n\nfunction Comment() {\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [toggle, settoggle] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [totalPages, seTotalPages] = useState(1);\n  const [formData, setFormData] = useState({\n    id: \"\",\n    name: \"kabeer khan\",\n    email: \"kabeer@gmail.com\",\n    body: \"\",\n  });\n\n  async function fetchData(page_number) {\n    //setLoading(true);\n    const response = await fetchComments(page_number);\n    console.log(\"response\", response);\n    seTotalPages(response.totalPages);\n    // setLoading(false);\n    setComments(response.data);\n  }\n\n  const createOrUpdateComment = async () => {\n    if (edit) {\n      console.log(\"I am from Edit\");\n      console.log(\"id and body is\", formData.id, formData.body);\n      // @Todo Find the object in the Comment array and update it , dont mutate the state directly\n      settoggle(!toggle);\n      setEdit(!edit);\n    } else {\n      let randomId = Math.floor(Math.random() * 1000) + 500;\n      let newValue = { ...formData, id: randomId };\n      setFormData(newValue);\n      const updatedCommentArray = [...comments, newValue];\n      await addComment(newValue);\n      setComments(updatedCommentArray);\n      settoggle(!toggle);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const List = comments.map((item, index) => {\n    return (\n      <Card\n        key={item.id}\n        index={index}\n        name={item.name}\n        email={item.email}\n        body={item.body}\n        handleDelete={() => handleDelete(item.id)}\n        handleUpdate={() => handleUpdate(item.id, item.body)}\n      />\n    );\n  });\n\n  const handlePageClick = (e) => {\n    fetchData(e.selected);\n  };\n\n  const handleDelete = async (id) => {\n    await deleteCommentById(id);\n    const newComments = comments.filter((comment) => comment.id !== id);\n    setComments(newComments);\n  };\n\n  const handleUpdate = async (id, data) => {\n    let newValue = { ...formData, id: id, body: data };\n    setFormData(newValue);\n    settoggle(!toggle);\n    setEdit(!edit);\n  };\n\n  const handleChange = (e) => {\n    let newValue = { ...formData, body: e.target.value };\n    setFormData(newValue);\n  };\n\n  const handleToggle = () => settoggle(!toggle);\n  return (\n    <div style={{ maxWidth: \"1000px\" }}>\n      <div style={header}>\n        <h3>Comments</h3>\n        <button className=\"create-button\" onClick={handleToggle}>\n          Create comment\n        </button>\n      </div>\n      <div style={main}>{loading ? \"loading...\" : List}</div>\n      <ReactPaginate\n        breakLabel=\"...\"\n        nextLabel=\">\"\n        nextClassName=\"next-nav\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={1}\n        pageCount={totalPages}\n        previousLabel=\"<\"\n        previousClassName=\"prev-nav\"\n        renderOnZeroPageCount={null}\n        className=\"pagination\"\n        pageClassName=\"list\"\n        pageLinkClassName=\"link\"\n      />\n      <div>\n        <CreateComment\n          isShow={toggle}\n          isEdit={edit}\n          handleClose={handleToggle}\n          value={formData}\n          handleChange={handleChange}\n          handleSave={createOrUpdateComment}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Comment;\n"],"names":["handleDelete","onClick","style","fontSize","color","handleUpdate","name","email","body","index","className","paddingLeft","slice","paddingRight","marginRight","fetchComments","page_number","axios","response","totalPages","parseInt","headers","data","deleteCommentById","id","addNewComment","isShow","isEdit","handleClose","value","handleChange","handleSave","display","type","onChange","placeholder","main","justifyContent","flexWrap","header","alignItems","margin","useState","comments","setComments","loading","toggle","settoggle","edit","setEdit","seTotalPages","formData","setFormData","fetchData","console","log","createOrUpdateComment","randomId","Math","floor","random","newValue","updatedCommentArray","addComment","useEffect","List","map","item","newComments","filter","comment","handleToggle","maxWidth","breakLabel","nextLabel","nextClassName","onPageChange","e","selected","pageRangeDisplayed","pageCount","previousLabel","previousClassName","renderOnZeroPageCount","pageClassName","pageLinkClassName","target"],"sourceRoot":""}